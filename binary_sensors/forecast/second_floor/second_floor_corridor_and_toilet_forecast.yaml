- platform: template
  sensors:
    second_floor_corridor_and_toilet_forecast:
      value_template: >
        {%- set roomTemperature = states('sensor.second_floor_corridor_and_toilet_temp') | float -%}
        {%- set requiredTemperature = state_attr('climate.second_floor_corridor_and_toilet', 'temperature') | float -%}
        {%- set startTimeSlotMinutes = states('input_number.second_floor_corridor_and_toilet_start') | int -%}
        {%- set currentMinutes = (now().hour * 60 + now().minute) | int -%}
        {%- set hourForForecast = (startTimeSlotMinutes/60) | int -%}
        {%- set forecastTemperature = state_attr('weather.home_hourly', 'forecast')[hourForForecast].temperature | float -%}
        {%- set slope = states('input_number.second_floor_corridor_and_toilet_slope') | float -%}
        {%- set intercept = states('input_number.second_floor_corridor_and_toilet_intercept') | float -%}
        {%- set linearApproximation = ((roomTemperature - forecastTemperature) * slope - intercept) | int -%}
        {%- set diffTime = (startTimeSlotMinutes - currentMinutes) | int -%} 
        {%- if is_state('input_boolean.control_according_to_plans_with_temperature_prediction','on') -%} 
          {%- if linearApproximation >= 0 -%}  
            {%- if diffTime >= 0 and diffTime < linearApproximation-%}
              heating
            {%- else -%}
              off
            {%- endif -%}
          {%- else -%}
            {%- if currentMinutes > startTimeSlotMinutes and currentMinutes < startTimeSlotMinutes * (-1 * linearApproximation) -%}
              not_heating
            {%- else -%}
              off
            {%- endif -%}
          {%- endif -%}
        {%- else -%}
          off
        {%- endif -%}

